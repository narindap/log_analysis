
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/client/googlevision/domain/BlockType.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 25 is not a valid line for pointer. File src/main/java/com/ascendcorp/ocrservice/client/googlevision/domain/BlockType.java has 11 line(s)
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:353)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.setPrimaryLocation(JavaIssue.java:65)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:309)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/config/ApplicationConfiguration.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 66 is not a valid line offset for pointer. File src/main/java/com/ascendcorp/ocrservice/config/ApplicationConfiguration.java has 40 character(s) at line 25
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:356)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.range(JavaIssue.java:97)
	at org.sonar.java.reporting.JavaIssue.lambda$addFlow$0(JavaIssue.java:86)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.sonar.java.reporting.JavaIssue.addFlow(JavaIssue.java:88)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:312)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/constant/Constant.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 12 is not a valid line offset for pointer. File src/main/java/com/ascendcorp/ocrservice/constant/Constant.java has 0 character(s) at line 25
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:356)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.setPrimaryLocation(JavaIssue.java:65)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:309)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/constant/Feature.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 25 is not a valid line for pointer. File src/main/java/com/ascendcorp/ocrservice/constant/Feature.java has 18 line(s)
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:353)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.setPrimaryLocation(JavaIssue.java:65)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:309)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/client/googlevision/domain/ImageBatchResponse.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 25 is not a valid line for pointer. File src/main/java/com/ascendcorp/ocrservice/client/googlevision/domain/ImageBatchResponse.java has 11 line(s)
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:353)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.setPrimaryLocation(JavaIssue.java:65)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:309)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/client/googlevision/domain/ImageInfo.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 25 is not a valid line for pointer. File src/main/java/com/ascendcorp/ocrservice/client/googlevision/domain/ImageInfo.java has 10 line(s)
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:353)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.setPrimaryLocation(JavaIssue.java:65)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:309)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/config/ImageProperties.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 66 is not a valid line offset for pointer. File src/main/java/com/ascendcorp/ocrservice/config/ImageProperties.java has 47 character(s) at line 25
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:356)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.range(JavaIssue.java:97)
	at org.sonar.java.reporting.JavaIssue.lambda$addFlow$0(JavaIssue.java:86)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.sonar.java.reporting.JavaIssue.addFlow(JavaIssue.java:88)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:312)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/client/googlevision/domain/Symbol.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 25 is not a valid line for pointer. File src/main/java/com/ascendcorp/ocrservice/client/googlevision/domain/Symbol.java has 16 line(s)
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:353)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.setPrimaryLocation(JavaIssue.java:65)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:309)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/validator/ImageValidator.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 24 is not a valid line offset for pointer. File src/main/java/com/ascendcorp/ocrservice/validator/ImageValidator.java has 22 character(s) at line 25
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:356)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.range(JavaIssue.java:97)
	at org.sonar.java.reporting.JavaIssue.lambda$addFlow$0(JavaIssue.java:86)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.sonar.java.reporting.JavaIssue.addFlow(JavaIssue.java:88)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:312)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/client/googlevision/domain/Vertex.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 25 is not a valid line for pointer. File src/main/java/com/ascendcorp/ocrservice/client/googlevision/domain/Vertex.java has 11 line(s)
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:353)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.setPrimaryLocation(JavaIssue.java:65)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:309)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/constant/Metrics.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 25 is not a valid line for pointer. File src/main/java/com/ascendcorp/ocrservice/constant/Metrics.java has 17 line(s)
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:353)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.setPrimaryLocation(JavaIssue.java:65)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:309)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/domain/frontidcard/IDCardInfo.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 33 is not a valid line offset for pointer. File src/main/java/com/ascendcorp/ocrservice/domain/frontidcard/IDCardInfo.java has 31 character(s) at line 25
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:356)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:305)
	at org.sonar.java.reporting.JavaIssue.range(JavaIssue.java:97)
	at org.sonar.java.reporting.JavaIssue.lambda$addFlow$0(JavaIssue.java:86)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.sonar.java.reporting.JavaIssue.addFlow(JavaIssue.java:88)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:312)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/utils/MrzUtils.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 12 is not a valid line offset for pointer. File src/main/java/com/ascendcorp/ocrservice/utils/MrzUtils.java has 0 character(s) at line 25
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:356)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.setPrimaryLocation(JavaIssue.java:65)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:309)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/constant/FieldHint.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 30 is not a valid line offset for pointer. File src/main/java/com/ascendcorp/ocrservice/constant/FieldHint.java has 26 character(s) at line 25
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:356)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.range(JavaIssue.java:97)
	at org.sonar.java.reporting.JavaIssue.lambda$addFlow$0(JavaIssue.java:86)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.sonar.java.reporting.JavaIssue.addFlow(JavaIssue.java:88)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:312)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/utils/FieldSelector.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 12 is not a valid line offset for pointer. File src/main/java/com/ascendcorp/ocrservice/utils/FieldSelector.java has 7 character(s) at line 25
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:356)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.setPrimaryLocation(JavaIssue.java:65)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:309)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/config/TimeConfiguration.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 25 is not a valid line for pointer. File src/main/java/com/ascendcorp/ocrservice/config/TimeConfiguration.java has 16 line(s)
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:353)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.setPrimaryLocation(JavaIssue.java:65)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:309)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssueFromCommons(AbstractRegexCheck.java:297)
	at org.sonarsource.analyzer.commons.regex.finders.ComplexRegexFinder.after(ComplexRegexFinder.java:143)
	at org.sonarsource.analyzer.commons.regex.ast.RegexBaseVisitor.visit(RegexBaseVisitor.java:51)
	at org.sonar.java.checks.regex.RegexComplexityCheck.leaveFile(RegexComplexityCheck.java:89)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$scanFile$3(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.lambda$forEach$9(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.forEach(VisitorsBridge.java:468)
	at org.sonar.java.model.VisitorsBridge$IssuableSubscriptionVisitorsRunner.scanFile(VisitorsBridge.java:417)
	at org.sonar.java.model.VisitorsBridge.lambda$runScanner$1(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:265)
	at org.sonar.java.model.VisitorsBridge.runScanner(VisitorsBridge.java:260)
	at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:243)
	at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:132)
	at org.sonar.java.JavaFrontend.scanAsBatchCallback(JavaFrontend.java:247)
	at org.sonar.java.JavaFrontend.lambda$scanBatch$0(JavaFrontend.java:238)
	at org.sonar.java.model.JParserConfig$Batch$1.acceptAST(JParserConfig.java:181)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1143)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:739)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:1049)
	at org.sonar.java.model.JParserConfig$Batch.parse(JParserConfig.java:165)
	at org.sonar.java.JavaFrontend.scanBatch(JavaFrontend.java:238)
	at org.sonar.java.JavaFrontend.scanInBatches(JavaFrontend.java:228)
	at org.sonar.java.JavaFrontend.scanAsBatch(JavaFrontend.java:195)
	at org.sonar.java.JavaFrontend.scan(JavaFrontend.java:170)
	at org.sonar.plugins.java.JavaSensor.execute(JavaSensor.java:113)
	at org.sonar.scanner.sensor.AbstractSensorWrapper.analyse(AbstractSensorWrapper.java:64)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:88)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.lambda$execute$1(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.withModuleStrategy(ModuleSensorsExecutor.java:79)
	at org.sonar.scanner.sensor.ModuleSensorsExecutor.execute(ModuleSensorsExecutor.java:61)
	at org.sonar.scanner.scan.SpringModuleScanContainer.doAfterStart(SpringModuleScanContainer.java:82)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scan(SpringProjectScanContainer.java:403)
	at org.sonar.scanner.scan.SpringProjectScanContainer.scanRecursively(SpringProjectScanContainer.java:399)
	at org.sonar.scanner.scan.SpringProjectScanContainer.doAfterStart(SpringProjectScanContainer.java:368)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.scanner.bootstrap.SpringGlobalContainer.doAfterStart(SpringGlobalContainer.java:137)
	at org.sonar.core.platform.SpringComponentContainer.startComponents(SpringComponentContainer.java:188)
	at org.sonar.core.platform.SpringComponentContainer.execute(SpringComponentContainer.java:167)
	at org.sonar.batch.bootstrapper.Batch.doExecute(Batch.java:72)
	at org.sonar.batch.bootstrapper.Batch.execute(Batch.java:66)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:189)
	at org.sonarsource.scanner.api.EmbeddedScanner.execute(EmbeddedScanner.java:138)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:112)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:75)
	at org.sonarsource.scanner.cli.Main.main(Main.java:61)

ERROR: Unable to run check class org.sonar.java.checks.regex.RegexComplexityCheck - S5843 on file 'src/main/java/com/ascendcorp/ocrservice/client/googlevision/rest/GoogleVisionClient.java', To help improve the SonarSource Java Analyzer, please report this problem to SonarSource: see https://community.sonarsource.com/
java.lang.IllegalArgumentException: 24 is not a valid line offset for pointer. File src/main/java/com/ascendcorp/ocrservice/client/googlevision/rest/GoogleVisionClient.java has 22 character(s) at line 25
	at org.sonar.api.utils.Preconditions.checkArgument(Preconditions.java:43)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:356)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:289)
	at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:304)
	at org.sonar.java.reporting.JavaIssue.range(JavaIssue.java:97)
	at org.sonar.java.reporting.JavaIssue.lambda$addFlow$0(JavaIssue.java:86)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)
	at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source)
	at java.base/java.util.stream.ReferencePipeline.collect(Unknown Source)
	at org.sonar.java.reporting.JavaIssue.addFlow(JavaIssue.java:88)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:312)
	at org.sonar.java.SonarComponents.lambda$reportIssue$3(SonarComponents.java:293)
	at java.base/java.util.Optional.ifPresent(Unknown Source)
	at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:287)
	at org.sonar.java.model.DefaultModuleScannerContext.reportIssue(DefaultModuleScannerContext.java:76)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:134)
	at org.sonar.java.model.DefaultJavaFileScannerContext.reportIssue(DefaultJavaFileScannerContext.java:116)
	at org.sonar.java.checks.regex.AbstractRegexCheck.reportIssue(AbstractRegexCheck.java:291)
